-- MySQL Script generated by MySQL Workbench
-- Wed Jan 11 18:55:03 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_firstname` VARCHAR(30) NOT NULL,
  `user_lastname` VARCHAR(45) NOT NULL,
  `user_mail` VARCHAR(30) NOT NULL,
  `user_pass` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_type` (
  `movie_type_id` INT NOT NULL AUTO_INCREMENT,
  `movie_type_name` VARCHAR(45) NULL COMMENT 'identificar se é FILME,SÉRIE ou ANIME\n',
  PRIMARY KEY (`movie_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `movie_duration` SMALLINT NULL,
  `movie_year_launch` SMALLINT NULL,
  `movie_date_launch` DATE NULL,
  `movie_rating` SMALLINT NULL COMMENT 'nota geral do filme baseado no calculo temporário da média das notas dadas.',
  `movie_parental_rating` VARCHAR(3) NULL COMMENT 'classificação indicativa do filme',
  `movie_date_added` DATE NULL,
  `movie_feed_url` VARCHAR(45) NULL,
  `movie_image_1` VARCHAR(45) NULL,
  `movie_image_2` VARCHAR(45) NULL,
  `movie_type_movie_type_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `language` (
  `language_id` INT NOT NULL AUTO_INCREMENT,
  `language_name` VARCHAR(15) NOT NULL,
  `language_code` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`language_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_description` (
  `movie_description_id` INT NOT NULL AUTO_INCREMENT,
  `movie_description_name` VARCHAR(45) NOT NULL,
  `movie_description_description` VARCHAR(45) NULL,
  `language_language_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_image` (
  `movie_image_id` INT NOT NULL AUTO_INCREMENT,
  `movie_image_source` VARCHAR(45) NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_image_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_video` (
  `movie_video_id` INT NOT NULL AUTO_INCREMENT,
  `movie_video_engine` VARCHAR(15) NOT NULL COMMENT 'origem do módulo do vídeo: YOUTUBE, VIMEO... etc.',
  `movie_video_url_source` VARCHAR(45) NOT NULL,
  `movie_movie_id` INT NOT NULL,
  `movie_video_description` TEXT NULL,
  PRIMARY KEY (`movie_video_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor` (
  `actor_id` INT NOT NULL AUTO_INCREMENT,
  `actor_name` VARCHAR(45) NOT NULL,
  `actor_image_url` VARCHAR(45) NOT NULL,
  `actor_image_source` VARCHAR(45) NULL,
  `actor_source_url` VARCHAR(45) NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor_to_movie` (
  `actor_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `movie_movie_id` INT NOT NULL,
  `actor_actor_id` INT NOT NULL,
  PRIMARY KEY (`actor_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `customer_firstname` VARCHAR(25) NOT NULL,
  `customer_lastname` VARCHAR(45) NOT NULL,
  `customer_mail` VARCHAR(45) NULL,
  `customer_pass` VARCHAR(25) NULL,
  `customer_status` SMALLINT NULL,
  `customer_date_birth` DATE NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_season`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_season` (
  `movie_season_id` INT NOT NULL AUTO_INCREMENT,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_season_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_rates_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_rates_movie` (
  `customer_rates_movie_id` INT NOT NULL AUTO_INCREMENT,
  `customer_rates_movie_rate` FLOAT NULL COMMENT 'pode ser nulo, no caso do cliente apenas marcar o filme como \'visto\', sem ter o ter avaliado. Em caso de uma avaliação, a linha será editada.',
  `customer_rates_movie_date_added` DATETIME NOT NULL,
  `customer_customer_id` INT NOT NULL,
  `movie_season_movie_season_id` INT NOT NULL COMMENT 'Cada filme ou série deverá ter obrigatóriamente ao menos 1 temporada. Inclusive, no caso dos filmes, 1 temporada será vinculada a ele.',
  PRIMARY KEY (`customer_rates_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_list` (
  `customer_list_id` INT NOT NULL AUTO_INCREMENT,
  `customer_list_name` VARCHAR(45) NOT NULL,
  `customer_list_date_added` DATE NULL,
  `customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`customer_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_to_customer_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_to_customer_list` (
  `movie_to_customer_list_id` INT NOT NULL AUTO_INCREMENT,
  `customer_list_customer_list_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_to_customer_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director` (
  `director_id` INT NOT NULL AUTO_INCREMENT,
  `director_name` VARCHAR(45) NULL,
  `director_image_source` VARCHAR(45) NULL,
  `director_source_url` VARCHAR(45) NULL,
  `director_image_url` VARCHAR(45) NULL,
  PRIMARY KEY (`director_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director_to_movie` (
  `director_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `director_director_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`director_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer` (
  `writer_id` INT NOT NULL AUTO_INCREMENT,
  `writer_name` VARCHAR(45) NULL,
  `writer_description` TEXT NULL,
  PRIMARY KEY (`writer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer_to_movie` (
  `writer_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `writer_writer_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`writer_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `challenge` (
  `challenge_id` INT NOT NULL AUTO_INCREMENT,
  `challenge_image_url` VARCHAR(45) NULL,
  `challenge_rule` TEXT NULL COMMENT 'regra do desafio em formato json\n',
  PRIMARY KEY (`challenge_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `challenge_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `challenge_description` (
  `challenge_description_id` INT NOT NULL AUTO_INCREMENT,
  `challenge_description_name` VARCHAR(45) NOT NULL,
  `challenge_description_description` TEXT NOT NULL,
  `challenge_challenge_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  `challenge_description_prize` TEXT NULL,
  PRIMARY KEY (`challenge_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy` (
  `trophy_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_image` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`trophy_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy_description` (
  `trophy_description_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_description_name` VARCHAR(45) NOT NULL,
  `trophy_description_description` VARCHAR(45) NULL,
  `trophy_trophy_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`trophy_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor_description` (
  `actor_description_id` INT NOT NULL AUTO_INCREMENT,
  `actor_description_description` TEXT NULL,
  `actor_actor_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`actor_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director_description` (
  `director_description_id` INT NOT NULL AUTO_INCREMENT,
  `director_description_description` TEXT NULL,
  `director_director_id` INT NOT NULL,
  PRIMARY KEY (`director_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer_description` (
  `writer_description_id` INT NOT NULL AUTO_INCREMENT,
  `writer_description_description` TEXT NULL,
  `language_language_id` INT NOT NULL,
  `writer_writer_id` INT NOT NULL,
  PRIMARY KEY (`writer_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy_to_customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy_to_customer` (
  `trophy_to_customer_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_to_customer_date_added` DATE NULL,
  `trophy_trophy_id` INT NOT NULL,
  `customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`trophy_to_customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_movie_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_movie_comment` (
  `customer_movie_comment_id` INT NOT NULL AUTO_INCREMENT,
  `customer_movie_comment_comment` VARCHAR(300) NOT NULL,
  `customer_movie_comment_language_code` VARCHAR(10) NULL,
  `customer_movie_comment_date_added` DATETIME NULL,
  `customer_customer_id` INT NOT NULL,
  `movie_season_movie_season_id` INT NOT NULL,
  PRIMARY KEY (`customer_movie_comment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `system_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `system_list` (
  `system_list_id` INT NOT NULL AUTO_INCREMENT,
  `system_list_date_added` DATE NOT NULL,
  PRIMARY KEY (`system_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `system_list_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `system_list_description` (
  `system_list_description_id` INT NOT NULL AUTO_INCREMENT,
  `system_list_description_name` VARCHAR(45) NOT NULL,
  `system_list_description` TEXT NULL,
  `system_list_system_list_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`system_list_description_id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
-- MySQL Script generated by MySQL Workbench
-- Wed Jan 11 18:55:03 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_firstname` VARCHAR(30) NOT NULL,
  `user_lastname` VARCHAR(45) NOT NULL,
  `user_mail` VARCHAR(30) NOT NULL,
  `user_pass` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_type` (
  `movie_type_id` INT NOT NULL AUTO_INCREMENT,
  `movie_type_name` VARCHAR(45) NULL COMMENT 'identificar se é FILME,SÉRIE ou ANIME\n',
  PRIMARY KEY (`movie_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `movie_duration` SMALLINT NULL,
  `movie_year_launch` SMALLINT NULL,
  `movie_date_launch` DATE NULL,
  `movie_rating` SMALLINT NULL COMMENT 'nota geral do filme baseado no calculo temporário da média das notas dadas.',
  `movie_parental_rating` VARCHAR(3) NULL COMMENT 'classificação indicativa do filme',
  `movie_date_added` DATE NULL,
  `movie_feed_url` VARCHAR(45) NULL,
  `movie_image_1` VARCHAR(45) NULL,
  `movie_image_2` VARCHAR(45) NULL,
  `movie_type_movie_type_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `language` (
  `language_id` INT NOT NULL AUTO_INCREMENT,
  `language_name` VARCHAR(15) NOT NULL,
  `language_code` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`language_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_description` (
  `movie_description_id` INT NOT NULL AUTO_INCREMENT,
  `movie_description_name` VARCHAR(45) NOT NULL,
  `movie_description_description` VARCHAR(45) NULL,
  `language_language_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_image` (
  `movie_image_id` INT NOT NULL AUTO_INCREMENT,
  `movie_image_source` VARCHAR(45) NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_image_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_video` (
  `movie_video_id` INT NOT NULL AUTO_INCREMENT,
  `movie_video_engine` VARCHAR(15) NOT NULL COMMENT 'origem do módulo do vídeo: YOUTUBE, VIMEO... etc.',
  `movie_video_url_source` VARCHAR(45) NOT NULL,
  `movie_movie_id` INT NOT NULL,
  `movie_video_description` TEXT NULL,
  `movie_videocol` VARCHAR(45) NULL,
  PRIMARY KEY (`movie_video_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor` (
  `actor_id` INT NOT NULL AUTO_INCREMENT,
  `actor_name` VARCHAR(45) NOT NULL,
  `actor_image_url` VARCHAR(45) NOT NULL,
  `actor_image_source` VARCHAR(45) NULL,
  `actor_source_url` VARCHAR(45) NULL,
  `actor_image_url` VARCHAR(45) NULL,
  `actorcol` VARCHAR(45) NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor_to_movie` (
  `actor_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `movie_movie_id` INT NOT NULL,
  `actor_actor_id` INT NOT NULL,
  PRIMARY KEY (`actor_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `customer_firstname` VARCHAR(25) NOT NULL,
  `customer_lastname` VARCHAR(45) NOT NULL,
  `customer_mail` VARCHAR(45) NULL,
  `customer_pass` VARCHAR(25) NULL,
  `customer_status` SMALLINT NULL,
  `customer_date_birth` DATE NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_season`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_season` (
  `movie_season_id` INT NOT NULL AUTO_INCREMENT,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_season_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_rates_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_rates_movie` (
  `customer_rates_movie_id` INT NOT NULL AUTO_INCREMENT,
  `customer_rates_movie_rate` FLOAT NULL COMMENT 'pode ser nulo, no caso do cliente apenas marcar o filme como \'visto\', sem ter o ter avaliado. Em caso de uma avaliação, a linha será editada.',
  `customer_rates_movie_date_added` DATETIME NOT NULL,
  `customer_customer_id` INT NOT NULL,
  `movie_season_movie_season_id` INT NOT NULL COMMENT 'Cada filme ou série deverá ter obrigatóriamente ao menos 1 temporada. Inclusive, no caso dos filmes, 1 temporada será vinculada a ele.',
  PRIMARY KEY (`customer_rates_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_list` (
  `customer_list_id` INT NOT NULL AUTO_INCREMENT,
  `customer_list_name` VARCHAR(45) NOT NULL,
  `customer_list_date_added` DATE NULL,
  `customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`customer_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_to_customer_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_to_customer_list` (
  `movie_to_customer_list_id` INT NOT NULL AUTO_INCREMENT,
  `customer_list_customer_list_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`movie_to_customer_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director` (
  `director_id` INT NOT NULL AUTO_INCREMENT,
  `director_name` VARCHAR(45) NULL,
  `director_image_source` VARCHAR(45) NULL,
  `director_source_url` VARCHAR(45) NULL,
  `director_image_url` VARCHAR(45) NULL,
  PRIMARY KEY (`director_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director_to_movie` (
  `director_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `director_director_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`director_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer` (
  `writer_id` INT NOT NULL AUTO_INCREMENT,
  `writer_name` VARCHAR(45) NULL,
  `writer_description` TEXT NULL,
  PRIMARY KEY (`writer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer_to_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer_to_movie` (
  `writer_to_movie_id` INT NOT NULL AUTO_INCREMENT,
  `writer_writer_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  PRIMARY KEY (`writer_to_movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `challenge` (
  `challenge_id` INT NOT NULL AUTO_INCREMENT,
  `challenge_image_url` VARCHAR(45) NULL,
  `challenge_rule` TEXT NULL COMMENT 'regra do desafio em formato json\n',
  PRIMARY KEY (`challenge_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `challenge_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `challenge_description` (
  `challenge_description_id` INT NOT NULL AUTO_INCREMENT,
  `challenge_description_name` VARCHAR(45) NOT NULL,
  `challenge_description_description` TEXT NOT NULL,
  `challenge_challenge_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  `challenge_description_prize` TEXT NULL,
  PRIMARY KEY (`challenge_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy` (
  `trophy_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_image` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`trophy_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy_description` (
  `trophy_description_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_description_name` VARCHAR(45) NOT NULL,
  `trophy_description_description` VARCHAR(45) NULL,
  `trophy_trophy_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`trophy_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `actor_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `actor_description` (
  `actor_description_id` INT NOT NULL AUTO_INCREMENT,
  `actor_description_description` TEXT NULL,
  `actor_actor_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`actor_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `director_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `director_description` (
  `director_description_id` INT NOT NULL AUTO_INCREMENT,
  `director_description_description` TEXT NULL,
  `director_director_id` INT NOT NULL,
  PRIMARY KEY (`director_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `writer_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `writer_description` (
  `writer_description_id` INT NOT NULL AUTO_INCREMENT,
  `writer_description_description` TEXT NULL,
  `language_language_id` INT NOT NULL,
  `writer_writer_id` INT NOT NULL,
  PRIMARY KEY (`writer_description_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trophy_to_customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trophy_to_customer` (
  `trophy_to_customer_id` INT NOT NULL AUTO_INCREMENT,
  `trophy_to_customer_date_added` DATE NULL,
  `trophy_trophy_id` INT NOT NULL,
  `customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`trophy_to_customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer_movie_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customer_movie_comment` (
  `customer_movie_comment_id` INT NOT NULL AUTO_INCREMENT,
  `customer_movie_comment_comment` VARCHAR(300) NOT NULL,
  `customer_movie_comment_language_code` VARCHAR(10) NULL,
  `customer_movie_comment_date_added` DATETIME NULL,
  `customer_customer_id` INT NOT NULL,
  `movie_season_movie_season_id` INT NOT NULL,
  PRIMARY KEY (`customer_movie_comment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `system_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `system_list` (
  `system_list_id` INT NOT NULL AUTO_INCREMENT,
  `system_list_date_added` DATE NOT NULL,
  PRIMARY KEY (`system_list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `system_list_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `system_list_description` (
  `system_list_description_id` INT NOT NULL AUTO_INCREMENT,
  `system_list_description_name` VARCHAR(45) NOT NULL,
  `system_list_description` TEXT NULL,
  `system_list_system_list_id` INT NOT NULL,
  `language_language_id` INT NOT NULL,
  PRIMARY KEY (`system_list_description_id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
